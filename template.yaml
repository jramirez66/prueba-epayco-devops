AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Resources:
  Transactions:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: creation_date
          AttributeType: 'N'
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: id
          KeyType: HASH
        - AttributeName: creation_date
          KeyType: RANGE
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
  ApiWebhook:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub
        - ${ResourceName} From Stack ${AWS::StackName}
        - ResourceName: ApiWebhook
      StageName: Prod
      DefinitionBody:
        openapi: '3.0'
        info: {}
        paths:
          /confirmation:
            post:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri: !Sub arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ConfirmationWebhooks.Arn}/invocations
              responses: {}
      EndpointConfiguration: REGIONAL
      TracingEnabled: true
      Cors:
        MaxAge: 5
  ConfirmationWebhooks:
    Type: AWS::Serverless::Function
    Properties:
      Description: !Sub
        - Stack ${AWS::StackName} Function ${ResourceName}
        - ResourceName: ConfirmationWebhooks
      CodeUri: src/ConfirmationWebhooks
      Handler: index.handler
      Runtime: nodejs14.x
      MemorySize: 3008
      Timeout: 30
      Tracing: Active
      Events:
        ApiWebhookPOSTconfirmation:
          Type: Api
          Properties:
            Path: /confirmation
            Method: POST
            RestApiId: !Ref ApiWebhook
  ConfirmationWebhooksLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Retain
    Properties:
      LogGroupName: !Sub /aws/lambda/${ConfirmationWebhooks}
  InsertDataFakeTransactions:
    Type: AWS::Serverless::Function
    Properties:
      Description: !Sub
        - Stack ${AWS::StackName} Function ${ResourceName}
        - ResourceName: InsertDataFakeTransactions
      CodeUri: src/InsertDataFakeTransactions
      Handler: index.handler
      Runtime: nodejs14.x
      MemorySize: 3008
      Timeout: 30
      Tracing: Active
      Environment:
        Variables:
          TRANSACTIONS_TABLE_NAME: !Ref Transactions
          TRANSACTIONS_TABLE_ARN: !GetAtt Transactions.Arn
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref Transactions
  InsertDataFakeTransactionsLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Retain
    Properties:
      LogGroupName: !Sub /aws/lambda/${InsertDataFakeTransactions}
  ConfirmationTransactions:
    Type: AWS::Serverless::Function
    Properties:
      Description: !Sub
        - Stack ${AWS::StackName} Function ${ResourceName}
        - ResourceName: ConfirmationTransactions
      CodeUri: src/ConfirmationTransactions
      Handler: index.handler
      Runtime: nodejs18.x
      MemorySize: 3008
      Timeout: 30
      Tracing: Active
      Environment:
        Variables:
          WEBHOOK_URL: !Sub https://${ApiWebhook}.execute-api.${AWS::Region}.amazonaws.com/Prod
      Events:
        Transactions:
          Type: DynamoDB
          Properties:
            Stream: !GetAtt Transactions.StreamArn
            StartingPosition: TRIM_HORIZON
            BatchSize: 1
  ConfirmationTransactionsLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Retain
    Properties:
      LogGroupName: !Sub /aws/lambda/${ConfirmationTransactions}